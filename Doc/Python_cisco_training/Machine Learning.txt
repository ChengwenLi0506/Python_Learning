要用到 numpy 和 pandas 二个数据分析库

机器学习：
简单了解模型原理
替换复杂数据

预测
聚类

百度智能云，这个网址不错

人工智能的上半场，是大数据，人工智能的下半场，是小数据

大数据杀熟
yolo: 计算机视觉识别
深度学习： 神经网络

大数据是勤奋的AI，要不停地进行数据训练
可视化：图之典，以项目和解决方案来驱动的



numpy (运算） + pands (加载，清洗，保存，可视化)

python: 极客风格，能省则省
python既面向对象，也面向过程
ndarry, DataFrame获取数据： 二维[行，列]，
切片：[start:end] 包括start，包括end，是一个半闭半开区间
切片是为了获取连续的数据
如果用list，就表示取不连续的数据


DataFrame, Series和ndarry三者之间的关系
无论是Series，还是DataFrame，里面的数据都是ndarray的数据格式
DataFrame中的单列，或者单行，就是Series

DataFrame中的数据切片和ndarray的数据切片是完全一样的
读csv, xls时，可以指定某一列为索引



数据预处理的8大策略：
1，抽样还是全量数据
2，数据清洗，空值，异常值
3，连续数据离散化
4，数据相关性与降维

5，标准化让数据落入相同范围
归一化和标准化


6，样本数量不够，不均衡问题
需要采样

7，非结构化数据预处理
8，文本向量化


平均值，中位数，众数
哈工大 LTP 文本分词


机器学习的7大步骤：
1，获取数据 （爬虫，购买，自有）
2，数据清洗 （8大策略）
3，数据拆分成训练集（75%）和测试集（25%），交叉验证
4，特征工程（归一化，标准化，主成分分析）  （最重要的步骤）
5，根据需求选择合适的模型 （预测，分类，聚类） --> 模型的训练
6，模型的调优（优化），模型参数（超参数），特征工程
7，模型的保存与二次加载 y=ax**2+bx+c



Tensorflow  深度学习 神经网络
sk-learn库  Scikit-Learn  机器学习
Keras 神经网络

线性回归背后就是线性方程 y=kx+b   y=wx+b
y = w1x1+w2x2+......+wnxn + b

矩阵乘法 *  或者 dot

类似于线性代数的方法，求系数

设计出模型后，一定要进行验算
将测试集中的数据代入模型，计算出预测值
然后将预测值和真实值进行对比，求出误差

误差  （不明白什么意思）
正确率

欠拟合
过拟合


线性方程只能拟合直线
生成多项式 1, a, b, a**2, ab,  b**2
多项式可以拟合曲线


预测算法和分类算法都属于有监督算法，（已有目标值，或有答案）
聚类算法只有数据，没有答案，属于无监督算法


初始值不重要
每个模型背后都有一个评价函数

特征数量对建模流程没有关系，是完全一样的

1，选取初始值（不重要）
2，计算到二个点的距离，近的归于同一类
3，计算分类样本的中心点


划一化，将最大值映射到1，最小值映射到0
标准化，引入方差和标准差

归一化和标准化只是一个放大和缩小的过程


基站类别可视化，可以从视觉上清楚了解类别分布


预测 （神经网络主要用这个）

聚类

分类















